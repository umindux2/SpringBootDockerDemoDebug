#The only difference between docker-compose.yaml and this debug file is moving
#from Dockerfile "ENTRYPOINT"  into "command" of the compose file
#don't forget in compose run config set=true "--build/force build images"

#create a network and add our services into this network:
#so, "app" service will be able to connect to the mysql database from "db" servoce by the hostname="db":
#jdbc:mysql://db:3306/DOCKERDB

#Connection url for connection in the DatabaseView:
#  jdbc:mysql://0.0.0.0:13306/DOCKERDB, login=root, password=root
#App is available at: http://localhost:18080/entitybus/post
version: "2.1"

networks:
  test:

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile_debug
    ports:
      - "18080:8080"
      - "5005:5005"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - test
    command: java -Djava.security.egd=file:/dev/./urandom -jar /project/target/demo-0.0.1-SNAPSHOT.jar
    environment:
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005

  db:
    image: opavlova/db-mysql:5.7-test
    container_name: db
    ports:
      - "13306:3306"
    healthcheck:
          test: ["CMD", "mysql", "-h", "localhost", "-P", "3306", "-u", "root", "--password=root", "-e", "select 1", "DOCKERDB"]
          interval: 1s
          timeout: 3s
          retries: 30
    networks:
      - test
